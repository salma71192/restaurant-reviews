class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static fetchRestaurants(e){fetch(DBHelper.DATABASE_URL,{method:"GET"}).then(t=>{if(t.ok)return t.json();{const n=`Request failed. Returned status of ${t.status}`;e(n,null)}},e=>{console.log("salma")}).then(function(t){e(null,t)}).catch(e=>requestError(e))}static fetchRestaurantById(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.find(t=>t.id==e);n?t(null,n):t("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.cuisine_type==e);t(null,n)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.neighborhood==e);t(null,n)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,n){DBHelper.fetchRestaurants((r,a)=>{if(r)n(r,null);else{let r=a;"all"!=e&&(r=r.filter(t=>t.cuisine_type==e)),"all"!=t&&(r=r.filter(e=>e.neighborhood==t)),n(null,r)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].neighborhood),r=t.filter((e,n)=>t.indexOf(e)==n);e(null,r)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].cuisine_type),r=t.filter((e,n)=>t.indexOf(e)==n);e(null,r)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return`/build/img/${e.photograph}.webp`}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}}function createDB(){"use strict";if("indexedDB"in window){idb.open("couches-n-restaurants",3,function(e){switch(e.oldVersion){case 0:case 1:console.log("Creating the restaurants object store"),e.createObjectStore("restaurants",{keyPath:"id"}),console.log("making a new Reviews object store"),e.createObjectStore("reviews",{keyPath:"restaurant_id"}),console.log("making a new offline-reviews object store"),e.createObjectStore("offline-reviews",{keyPath:"name"}),console.log("making a new neighborhoods object store"),e.createObjectStore("neighborhoods",{keyPath:"neighborhoodNames"}),console.log("making a new cuisines object store"),e.createObjectStore("cuisines",{keyPath:"cuisinesNames"});case 2:console.log("Creating a name index for restaurant object store"),e.transaction.objectStore("restaurants").createIndex("name","name",{unique:!0}),console.log("Creating a name index for reviews object store"),e.transaction.objectStore("reviews").createIndex("id","id",{unique:!0})}}).then(function(e){DBHelper.fetchRestaurants((t,n)=>{var r=e.transaction("restaurants","readwrite").objectStore("restaurants");return Promise.all(n.map(function(e){r.put(e)})).then(()=>console.log("All restaurants have been added."))})});var e={id:1,neighborhoodNames:["Manhattan","Brooklyn","Queens"]};idb.open("couches-n-restaurants").then(function(t){return t.transaction("neighborhoods","readwrite").objectStore("neighborhoods").put(e)});var t={id:1,cuisinesNames:["Asian","Pizza","American","Mexican"]};idb.open("couches-n-restaurants").then(function(e){return e.transaction("cuisines","readwrite").objectStore("cuisines").put(t)})}else console.log("This browser doesn't support IndexedDB")}createDB();